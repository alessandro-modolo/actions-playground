name: Make release

on:
  workflow_dispatch:

jobs:
  prepare-release:
    name: Prepare release version
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Configure Git User
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: Create release
        run: |
          # prepare next release version
          mvn build-helper:parse-version versions:set \
          -DskipTests \
          -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.incrementalVersion} \
          versions:commit
  
          RELEASE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          TOKENS=(${RELEASE_VERSION//./ })
          CURRENT_DATE=$(date +"%Y-%m-%d")
          
          # add a new patch version section inside CHANGELOG.md
          if [[ "$OSTYPE" == "darwin"* ]]; then
            sed -i '' -e "s/.*## ${TOKENS[0]}.${TOKENS[1]} Unreleased.*/ ## [${RELEASE_VERSION}] - ${CURRENT_DATE}/" CHANGELOG.md
          else
            sed -i -e "s/.*## ${TOKENS[0]}.${TOKENS[1]} Unreleased.*/ ## [${RELEASE_VERSION}] - ${CURRENT_DATE}/" CHANGELOG.md
          fi
        
          printf "[%s]: https://github.com/alessandro-modolo/releases/tag/v%s\n" ${RELEASE_VERSION} ${RELEASE_VERSION} >> CHANGELOG.md
          
          # commit new version
          git commit -am "version v${RELEASE_VERSION}" --
          
          # create a tag for the release
          git tag -a "v${RELEASE_VERSION}" -m "" --
          
          git push
          git push --tags
          
          RELEASE_NOTES=$(sh .github/workflows/extract-release-changelog.sh ${RELEASE_VERSION})
          echo "release_tag=v${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "release_name=${RELEASE_VERSION}" >> $GITHUB_ENV
          echo "release_notes=v${RELEASE_NOTES}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.release_tag }}
          release_name: ${{ env.release_name }}
          body: ${{ env.release_notes }}
          draft: false
          prerelease: false

      - name: Publish to GitHub Packages Apache Maven
        run: |
          mvn deploy -s $GITHUB_WORKSPACE/settings.xml -DskipTests
        env:
          GITHUB_TOKEN: ${{ github.token }}

  prepare-development-release:
    name: Prepare development version
    runs-on: ubuntu-latest
    needs: prepare-release
    permissions: write-all

    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Cache local Maven repository
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Configure Git User
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"

      - name: Create next development version
        run: |
          # prepare next development version
          mvn build-helper:parse-version versions:set \
          -DskipTests \
          -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion}-SNAPSHOT \
          versions:commit
          
          # commit and push new development version
          git commit -am "prepare next development version" --
          git push

      - name: Publish to GitHub Packages Apache Maven
        run: |
          mvn deploy -s $GITHUB_WORKSPACE/settings.xml -DskipTests
        env:
          GITHUB_TOKEN: ${{ github.token }}
